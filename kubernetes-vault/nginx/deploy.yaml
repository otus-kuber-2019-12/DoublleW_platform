apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-vault
  template:
    metadata:
      labels:
        app: nginx-vault
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-secret-server.cert: "pki_int/issue/example-dot-ru"
        vault.hashicorp.com/agent-inject-template-server.cert: |
          {{- with secret "pki_int/issue/example-dot-ru" "common_name=nginx.example.ru" -}}
          {{ .Data.certificate }}
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-server.key: "pki_int/issue/example-dot-ru"
        vault.hashicorp.com/agent-inject-template-server.key: |
          {{- with secret "pki_int/issue/example-dot-ru" "common_name=nginx.example.ru" -}}
          {{ .Data.private_key }}
          {{- end }}
        vault.hashicorp.com/role: "otus"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/service: "https://vault:8200"
        vault.hashicorp.com/agent-inject-command: "nginx -s reload"
    spec:
      serviceAccountName: vault-auth
      containers:
      - name: nginx-vault
        image: doubllew/public:nginx_vault_ssl-v0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 443
          name: https

---

kind: Service
apiVersion: v1
metadata:
  name: nginx-vault
  labels:
    app: nginx-vault
spec:
  type: LoadBalancer
  selector:
    app: nginx-vault
  ports:
  - name: https
    protocol: TCP
    port: 8443
    targetPort: 443